name: Release

on:
  workflow_dispatch:

env:
  RELEASE_NAME: ""

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: pwsh
        run: |
          echo "RELEASE_NAME=$(Get-Date -Format 'yyyy-MM-dd').alpha" | Out-File -FilePath $Env:GITHUB_ENV -Append
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          pyinstaller --name=ytmasc --icon=".\assets\icon.ico" --onefile .\ytmasc\__main__.py
      - name: Build executable with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: pwsh
        run: |
          pyinstaller --name=ytmasc --icon="./assets/icon.ico" --onefile ./ytmasc/__main__.py

      - name: Create Release (Windows)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_NAME }}
          prerelease: true
          body: Alpha stage release
          files: ./dist/ytmasc.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_NAME }}
          prerelease: true
          body: Alpha stage release
          files: ./dist/ytmasc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
